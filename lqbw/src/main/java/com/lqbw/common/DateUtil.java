package com.lqbw.common;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import org.apache.commons.lang3.time.DateUtils;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;/** * Date Utility Class used to convert Strings to Dates and Timestamps * * @author <a href="mailto:matt@raibledesigns.com">Matt Raible</a> *         Modified by <a href="mailto:dan@getrolling.com">Dan Kibler </a> *         to correct time pattern. Minutes should be mm not MM (MM is month). */public final class DateUtil {    private static Log log = LogFactory.getLog(DateUtil.class);    /**     * @param date     * @return     */    public static String formatToCN(Date date) {        if (date != null)            return new SimpleDateFormat("yyyy-MM-dd").format(date);        else            return "";    }    public static String format(Date date, String pattern) {        if (date != null)            return new SimpleDateFormat(pattern).format(date);        else            return "";    }    /**     * @param date     * @return     */    public static String formatToMonth(Date date) {        if (date != null)            return new SimpleDateFormat("yyyy-MM").format(date);        else            return "";    }    /**     * @param date     * @return     */    public static String formatDateTimeToCN(Date date) {        if (date != null)            return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date);        else            return "";    }    /**     * @param date     * @return     */    public static String formatDateTimeToyMdHm(Date date) {        if (date != null)            return new SimpleDateFormat("yyyy-MM-dd HH:mm").format(date);        else            return "";    }    /**     * @param calendar     * @return     */    public static String formatCalendarToyMdHm(Calendar calendar) {        if (calendar != null)            return new SimpleDateFormat("yyyy-MM-dd HH:mm").format(calendar.getTime());        else            return "";    }    /**     * @param dateStr     * @return     */    public static Date parse(String dateStr) {        if (dateStr != null && !dateStr.trim().equals("")) {            try {                return new SimpleDateFormat("yyyy-MM-dd").parse(dateStr);            } catch (ParseException e) {                e.printStackTrace();            }        }        return null;    }    /**     * 增加天数     * @param date     * @param num     * @return     */    public static Date addDay(Date date, int num) {        Calendar c = Calendar.getInstance();        c.setTime(date);        c.add(Calendar.DAY_OF_MONTH, num);        return c.getTime();    }    /**     * 获取当前日期的当月第一天的当前时间     * @param date     * @return     */    public static Date findBeginDate(Date date) {        Calendar c = Calendar.getInstance();        c.setTime(date);        c.set(Calendar.DAY_OF_MONTH, c.getActualMinimum(Calendar.DAY_OF_MONTH));        return c.getTime();    }    /**     *  获取当前日期的当月最后一天的当前时间     * @param date     * @return     */    public static Date findEndDate(Date date) {        Calendar c = Calendar.getInstance();        c.setTime(date);        c.set(Calendar.DAY_OF_MONTH, c.getActualMaximum(Calendar.DAY_OF_MONTH));        return c.getTime();    }    /**     * 增加月     * @param date     * @return     */    public static String addMonths(String start,int n) {    	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");		Date end = null;		try {			end = sdf.parse(start);		} catch (ParseException e) {			e.printStackTrace();		}		end = DateUtils.addMonths(end, n);    	return sdf.format(end);    }    public static void main(String[] args) {    	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");    	System.out.println(addMonths("2015-04-21",6));    	System.out.println(addMonths("2015-03-31",6));    	System.out.println(addMonths("2015-02-12",25));    	Date now = new Date();    	System.out.println(sdf.format(findBeginDate(now)));    	System.out.println(sdf.format(findEndDate(now)));    	System.out.println(sdf.format(addDay(now,21)));	}}